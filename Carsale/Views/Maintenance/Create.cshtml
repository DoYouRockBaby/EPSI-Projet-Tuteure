@using Carsale.DAO.Models
@using Carsale.ViewModels
@using Carsale.Extensions

@model CreateMaintenanceViewModel

@{
    ViewBag.Title = "Créer un entretient";
}

<h2>Créer un entretient</h2>

@using (Html.BeginForm("Create", "Maintenance", FormMethod.Post, new { id = "create", @Class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <div class="form-row">
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.Maintenance.Description, htmlAttributes: new { @class = "control-label" })
            @Html.TextAreaFor(model => model.Maintenance.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Maintenance.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Maintenance.WorkingTime, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Maintenance.WorkingTime, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Maintenance.WorkingTime, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.SelectedHourlyRate, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.SelectedHourlyRate, Model.HourlyRates.Select(hourlyRate => new SelectListItem
            {
                Value = hourlyRate.Id.ToString(),
                Text = hourlyRate.MaintenanceType.ToString()
            }), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SelectedHourlyRate, ViewBag.HourlyRateError as string, new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.Maintenance.VehicleMatriculation, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Maintenance.VehicleMatriculation, Model.Vehicles.Select(vehicle => new SelectListItem
            {
                Value = vehicle.Matriculation,
                Text = vehicle.Matriculation
            }), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Maintenance.VehicleMatriculation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.SelectedParts, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.SelectedParts, Model.Parts.Select(part => new SelectListItem
            {
                Value = part.Id.ToString(),
                Text = part.Name
            }), new { @class = "form-control", multiple = "multiple" })
            @Html.ValidationMessageFor(model => model.SelectedParts, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <input type="submit" value="Vendre" class="btn btn-primary" />
    </div>
}

@section scripts
{
    <script>
        $('select[multiple="multiple"]').multiSelect();
    </script>
}